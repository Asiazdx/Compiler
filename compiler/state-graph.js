exports.token = {
  //    0   ,  1  ,  2  , 3 ,   4 ,   5 ,   6 ,   7 ,   8 ,   9 ,  10 ,  11 ,  12 ,  13 ,  14 ,  15 ,  16  ,  17 , 18 ,
  S:['start','id','digit','W','ASG',  '+', '++','ADE',  '-', '--','SUE',  '*','CAE',  '/','DIE','BAND','AND','BOR','OR',
  //    19  , 20  ,   21 ,  22  ,  23  ,   24 ,   25 ,   26 ,  27 ,  28 ,  29 ,  30 ,   31 ,  32 ,   33 ,  34  , 35, 36,
       '!'  , 'NE',   '>',  '>=',   '<',  '<=',   '(',   ')',  '{',  '}',  '[',  ']',   ';','string','.','ANNO','W35','W36',
  //   37 , 38 , 39  ,  40 ,   41,  42 ,  43  ,   44 , 45  ,  46 ,  47 ,  48   ,   49  ,   50 , 51
     'W37', '=','OCT','HEX','digit','W42','FNUM','SNUM','W45','W46','W47','SPACE','ENTER',  '==', ','
  ],
  I:[
    ['1','2','3','4','5','6','7'],                                                                                        //0
    ["G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","Y","Z",
      "g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","y","z","_"],                                   //1
    //2  ,   3 ,   4 ,   5 ,   6 ,   7 ,   8 ,   9 ,  10 ,  11  , 12 ,  13 ,  14 ,  15 ,  16 ,  17 ,  18 , 19  ,  20 , 21  ,
    [':'],['='],['+'],['-'],['*'],['/'],['&'],['|'],['!'],['>'],['<'],['{'],['}'],['('],[')'],['['],[']'],[';'],['"'],['.'],
    //22 ,    23   ,                        24               ,    25   ,    26   ,  27 , 28  ,  29
    ['0'],['8','9'],["A","B","C","D","F","a","b","c","d","f"],['x','X'],['e','E'],[' '],[','],['\n']
  ],
  T:{
    0:{1:1,0:2,2:3,4:5,5:8,6:11,7:13,8:15,9:17,10:19,11:21,12:23,13:27,14:28,15:25,16:26,17:29,18:30,19:31,21:33,20:35,3:38,23:2,22:41,24:1,26:1,25:1,27:48,28:51,29:49},
    1:{0:1,1:1,22:1,23:1,24:1,25:1,26:1},
    2:{0:2,22:2,23:2,21:45,26:46},
    3:{3:4},
    5:{4:6,3:7},
    8:{5:9,3:10},
    11:{3:12},
    13:{6:36,3:14},
    15:{8:16},
    17:{9:18},
    19:{3:20},
    21:{3:22},
    23:{3:24},
    35:{0:35,1:35,2:35,3:35,4:35,5:35,6:35,7:35,8:35,9:35,10:35,11:35,12:35,13:35,14:35,15:35,16:35,17:35,18:35,19:35,20:32,21:35,22:35,23:35,24:35,26:35,25:35},
    36:{0:36,1:36,2:36,3:36,4:36,5:36,6:37,7:36,8:36,9:36,10:36,11:36,12:36,13:36,14:36,15:36,16:36,17:36,18:36,19:36,20:36,21:36,22:36,23:36,24:36,26:36,25:36},
    37:{0:36,1:36,2:36,3:36,4:36,5:36,6:37,7:34,8:36,9:36,10:36,11:36,12:36,13:36,14:36,15:36,16:36,17:36,18:36,19:36,20:36,21:36,22:36,23:36,24:36,26:36,25:36},
    41:{0:39,25:42},
    42:{0:40,23:40,24:40,26:40},
    40:{0:40,23:40,24:40,22:40,26:40},
    38:{3:50},
    39:{0:39,22:39},
    43:{0:43,23:43,22:43,26:46},
    44:{0:44,23:44,22:44},
    45:{0:43,23:43,22:43},
    46:{0:44,23:44,22:44,4:47,5:47},
    47:{0:44,23:44,22:44},
    48:{27:48}
  },
  SS:0,
  FS:[1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,38,39,40,41,43,44,48,49,50,51]
};

exports.wenfa = [
    '<函数定义>-><修饰词闭包> <类型> <变量> ( <参数声明> ) { <函数块> }',
    '<修饰词闭包>-><修饰词> <修饰词闭包>|@','<修饰词>->public|private|protected',
    '<类型>->int <取地址>|char <取地址>|boolean <取地址>|void <取地址>',
    '<取地址>-><星号> <取地址>|@',
    '<星号>->*',
    '<变量>-><标志符> <数组下标>',
    '<标志符>->id',
    '<数组下标>->[ <因式> ]|@',
    '<因式>->( <表达式> )|<变量>|<数字>',
    '<数字>->digit',
    '<表达式>-><因子> <项>',
    '<因子>-><因式> <因式递归>',
    '<因式递归>->* <因式> <因式递归>|/ <因式> <因式递归>|@',
    '<项>->+ <因子> <项>|- <因子> <项>|@',
    '<参数声明>-><声明> <声明闭包>|@',
    '<声明>-><修饰词闭包> <类型> <变量> <赋初值>',
    '<赋初值>->= <右值>|@',
    '<右值>-><表达式>|{ <多个数据> }',
    '<多个数据>-><数字> <数字闭包>',
    '<数字闭包>->, <数字> <数字闭包>|@',
    '<声明闭包>->, <声明> <声明闭包>|@',
    '<函数块>-><声明语句闭包> <函数块闭包>',
    '<声明语句闭包>-><声明语句> <声明语句闭包>|@',
    '<声明语句>-><声明> ;',
    '<函数块闭包>-><赋值函数> <函数块闭包>|<for循环> <函数块闭包>|<条件语句> <函数块闭包>|<函数返回> <函数块闭包>|@',
    '<赋值函数>-><变量> <赋值或函数调用>',
    '<赋值或函数调用>->= <右值> ;|( <参数列表> ) ;',
    '<参数列表>-><参数> <参数闭包>',
    '<参数闭包>->, <参数> <参数闭包>|@',
    '<参数>-><标志符>|<数字>|<字符串>',
    '<字符串>->string',
    '<for循环>->for ( <赋值函数> <逻辑表达式> ; <后缀表达式> ) { <函数块> }',
    '<逻辑表达式>-><表达式> <逻辑运算符> <表达式>',
    '<逻辑运算符>-><|>|==|!=',
    '<后缀表达式>-><变量> <后缀运算符>',
    '<后缀运算符>->++|--',
    '<条件语句>->if ( <逻辑表达式> ) { <函数块> } <否则语句>',
    '<否则语句>->else { <函数块> }|@',
    '<函数返回>->return <因式> ;'
];

exports.keywords = [
    'if','else','do','while','int','float','double','long','char','bool','return','for',
    'public','void','private','protected'
];